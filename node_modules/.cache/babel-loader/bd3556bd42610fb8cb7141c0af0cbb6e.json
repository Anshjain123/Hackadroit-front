{"ast":null,"code":"var _jsxFileName = \"E:\\\\hackadroit-front\\\\hackdroit-master\\\\src\\\\Components\\\\FrontButtons.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport Select from 'react-select';\nimport './FrontButtons.css';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Button } from '@mui/material'; // import { isDisabled } from '@testing-library/user-event/dist/utils';\n\nimport { useEffect } from 'react';\nimport { body } from '@mui/material/CssBaseline/CssBaseline';\nimport { useNavigate } from 'react-router-dom'; // const options = [\"one\", \"Two\", \"Three\"]\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FrontButtons(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const [options2, setOptions2] = useState([{\n    label: 'Select City'\n  }]);\n  let options1 = [{\n    label: \"Select State\"\n  }];\n  const navigate = useNavigate();\n  const [selectedOption1, setSelectedOption1] = useState(null);\n  const [selectedOption2, setSelectedOption2] = useState(null);\n  const [flag1, setflag1] = useState(false);\n  const [flag2, setflag2] = useState(false); // const label = 'All';\n\n  const handleOnClick1 = async selectedOption1 => {\n    setSelectedOption1(selectedOption1); // console.log(selectedOption1);  \n\n    const token = localStorage.getItem('token');\n    const response = await fetch(`http://localhost:8080/city/all/${selectedOption1.value}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    });\n\n    if (response.status === 200) {\n      const data1 = await response.json();\n      let cities = [{\n        label: \"select\"\n      }];\n\n      for (let i = 0; i < data1.length; i++) {\n        console.log(data1[i]);\n        cities.push({\n          label: data1[i].cityName,\n          value: data1[i].cityName\n        });\n      }\n\n      console.log(cities);\n      setOptions2(cities);\n    } else {//error\n    }\n\n    let vari = true;\n    setflag1(vari);\n  };\n\n  const getPlaces = () => {\n    navigate(\"/place\", {\n      state: {\n        State: selectedOption1.value,\n        city: selectedOption2.value\n      }\n    });\n  };\n\n  useEffect(async () => {\n    for (let i = 0; i < data.length; i++) {\n      options1.push({\n        label: data[i].stateName,\n        value: data[i].stateName\n      });\n    }\n  });\n\n  const handleOnClick2 = async selectedOption2 => {\n    setSelectedOption2(selectedOption2);\n    let vari = true;\n    setflag2(vari);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        className: \"dropdown1\",\n        defaultValue: selectedOption1,\n        onChange: handleOnClick1,\n        options: options1,\n        name: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        className: \"dropdown2\",\n        isDisabled: !flag1,\n        defaultValue: selectedOption2,\n        onChange: handleOnClick2,\n        options: options2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"getplaces\",\n      style: {\n        marginLeft: '650px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !flag1 || !flag2,\n        style: {\n          borderRadius: '25px'\n        },\n        variant: \"contained\",\n        onClick: getPlaces,\n        children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n          className: \"searchicon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 127\n        }, this), \"Search\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FrontButtons, \"CqXY1mqjupJ0wD8WtVKZeKLc8i8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = FrontButtons;\nexport default FrontButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"FrontButtons\");","map":{"version":3,"sources":["E:/hackadroit-front/hackdroit-master/src/Components/FrontButtons.js"],"names":["React","useState","Select","SearchIcon","Button","useEffect","body","useNavigate","FrontButtons","data","options2","setOptions2","label","options1","navigate","selectedOption1","setSelectedOption1","selectedOption2","setSelectedOption2","flag1","setflag1","flag2","setflag2","handleOnClick1","token","localStorage","getItem","response","fetch","value","method","headers","status","data1","json","cities","i","length","console","log","push","cityName","vari","getPlaces","state","State","city","stateName","handleOnClick2","marginLeft","borderRadius"],"mappings":"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","sourcesContent":["import { React, useState } from 'react'\nimport Select from 'react-select';\nimport './FrontButtons.css'\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Button } from '@mui/material';\n// import { isDisabled } from '@testing-library/user-event/dist/utils';\nimport {useEffect} from 'react';\nimport { body } from '@mui/material/CssBaseline/CssBaseline';\nimport { useNavigate } from 'react-router-dom';\n\n// const options = [\"one\", \"Two\", \"Three\"]\nfunction FrontButtons({data}) {\n\n    const [options2,setOptions2] = useState([\n        {label:'Select City'},\n    ]);\n    let options1 = [\n        {label:\"Select State\"},\n        \n    ];\n\n    const navigate = useNavigate();\n\n    const [selectedOption1, setSelectedOption1] = useState(null);\n    const [selectedOption2, setSelectedOption2] = useState(null);\n    const [flag1, setflag1] = useState(false);\n    const [flag2, setflag2] = useState(false);  \n    // const label = 'All';\n    const handleOnClick1= async (selectedOption1) =>{\n        setSelectedOption1(selectedOption1);\n        // console.log(selectedOption1);  \n        const token = localStorage.getItem('token');\n        const response = await fetch(`http://localhost:8080/city/all/${selectedOption1.value}`,{\n            method : \"GET\",\n            headers : {\n                \"Content-Type\" : \"application/json\",\n                \"Authorization\" : `Bearer ${token}`\n            }\n        })\n        if(response.status === 200){\n            const data1 = await response.json();\n            let cities = [\n                {label : \"select\"}\n            ]\n            for(let i=0;i<data1.length;i++){\n                console.log(data1[i]);\n                cities.push({label:data1[i].cityName,value:data1[i].cityName})\n            }\n            console.log(cities);\n            setOptions2(cities);\n        }\n        else{\n            //error\n        }\n        let vari = true; \n        setflag1(vari); \n    }\n\n    const getPlaces = () =>{\n        navigate(\"/place\",{\n            state : {\n                State : selectedOption1.value,\n                city : selectedOption2.value\n            }\n        })\n    }\n\n    useEffect(async()=>{\n        for(let i=0;i<data.length;i++){\n            options1.push({label:data[i].stateName,value:data[i].stateName})\n        }\n    })\n    \n    \n\n    const handleOnClick2=async (selectedOption2)=>{\n        \n        setSelectedOption2(selectedOption2);  \n        let vari = true; \n        setflag2(vari); \n    }\n    return (\n        <>\n            <div className='flex'>\n                <Select className='dropdown1'\n                    defaultValue = {selectedOption1}\n                    onChange={handleOnClick1}\n                    options={options1}\n                    name=\"All\"\n\n                />\n                <Select className='dropdown2'\n                    isDisabled = {!flag1}\n                    defaultValue = {selectedOption2}\n                    onChange={handleOnClick2}\n                    options={options2}\n                />\n\n            </div>\n            <div className=\"getplaces\" style={{marginLeft:'650px'}}>\n                <Button disabled= {!flag1 || !flag2} style = {{borderRadius:'25px'}}  variant=\"contained\" onClick={getPlaces}><SearchIcon className = \"searchicon\"/>Search</Button>\n            </div>\n        </>\n    )\n}\n\nexport default FrontButtons"]},"metadata":{},"sourceType":"module"}