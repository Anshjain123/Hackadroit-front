{"ast":null,"code":"var _jsxFileName = \"E:\\\\hackadroit-front\\\\hackdroit-master\\\\src\\\\Components\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Place from './Place';\nimport \"./Search.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  const location = useLocation();\n  const [places, setPlaces] = useState([]);\n  useEffect(async () => {\n    const token = localStorage.getItem('token');\n    const response = await fetch(\"http://localhost:8080/place/all\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        city: location.state.city,\n        state: location.state.State,\n        category: \"\"\n      })\n    });\n\n    if (response.status === 200) {\n      const json = await response.json();\n      setPlaces(json);\n      console.log(json);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: places.map(element => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Place, {\n            placeName: element.placeName,\n            discription: element.discription,\n            address: element.address,\n            image: element.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, element.placeName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Search, \"qv7evEaUWCqyjhTDoGnQa2XIL0s=\", false, function () {\n  return [useLocation];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["E:/hackadroit-front/hackdroit-master/src/Components/Search.js"],"names":["React","useEffect","useState","useLocation","Place","Search","location","places","setPlaces","token","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","city","state","State","category","status","json","console","log","map","element","placeName","discription","address","image"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,cAAP;;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AAEA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,YAAY;AAEpB,UAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAoC;AAC9DC,MAAAA,MAAM,EAAE,MADsD;AAE9DC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,yBAAkB,UAASN,KAAM;AAF1B,OAFqD;AAM9DO,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,IAAI,EAAEb,QAAQ,CAACc,KAAT,CAAeD,IADF;AAEnBC,QAAAA,KAAK,EAAEd,QAAQ,CAACc,KAAT,CAAeC,KAFH;AAGnBC,QAAAA,QAAQ,EAAE;AAHS,OAAf;AANwD,KAApC,CAA5B;;AAaA,QAAIV,QAAQ,CAACW,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAMC,IAAI,GAAG,MAAMZ,QAAQ,CAACY,IAAT,EAAnB;AACAhB,MAAAA,SAAS,CAACgB,IAAD,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD;AACF,GArBQ,EAqBN,EArBM,CAAT;AAuBA,sBACE;AAAA,2BACE;AAAA,gBACGjB,MAAM,CAACoB,GAAP,CAAYC,OAAD,IAAa;AACvB,4BACE;AAAA,iCACA,QAAC,KAAD;AAAO,YAAA,SAAS,EAAEA,OAAO,CAACC,SAA1B;AAAqC,YAAA,WAAW,EAAED,OAAO,CAACE,WAA1D;AAAuE,YAAA,OAAO,EAAEF,OAAO,CAACG,OAAxF;AAAiG,YAAA,KAAK,EAAEH,OAAO,CAACI;AAAhH;AAAA;AAAA;AAAA;AAAA;AADA,WAAUJ,OAAO,CAACC,SAAlB;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAaD;;GAzCQxB,M;UACUF,W;;;KADVE,M;AA2CT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Place from './Place';\nimport \"./Search.css\"\n\nfunction Search() {\n  const location = useLocation();\n\n  const [places, setPlaces] = useState([]);\n\n  useEffect(async () => {\n\n    const token = localStorage.getItem('token');\n    const response = await fetch(\"http://localhost:8080/place/all\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        city: location.state.city,\n        state: location.state.State,\n        category: \"\",\n      })\n    })\n\n    if (response.status === 200) {\n      const json = await response.json();\n      setPlaces(json);\n      console.log(json);\n    }\n  }, [])\n\n  return(\n    <>\n      <div>\n        {places.map((element) => {\n          return (\n            <div key={element.placeName}>\n            <Place placeName={element.placeName} discription={element.discription} address={element.address} image={element.image}/>\n            </div>\n          )\n        })}\n      </div>\n    </>\n  )\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}